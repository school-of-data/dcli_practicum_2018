{
    "collab_server" : "",
    "contents" : "# Load libraries ####\nlibrary(ggplot2)\n\n# Bar Graph ####\n# Base R\nbarplot(BOD$demand, names.arg = BOD$Time)\n\n# use table() function to create a count \nbarplot(table(mtcars$cyl))\n\n\n# ggplot2\n# geom_bar sets stats to count by default. use stat = \"identity\"\nggplot(BOD, aes(x=Time, y=demand)) +\n  geom_bar(stat = \"identity\")\n\nggplot(BOD, aes(x=factor(Time), y=demand)) +\n  geom_bar(stat = \"identity\")\n\n# use geom_col to leave data as is\nggplot(BOD, aes(x=factor(Time), y=demand)) +\n  geom_col()\n\n\n\n# Histogram ####\n# Base R\nhist(mtcars$mpg)\n\nhist(mtcars$mpg, breaks = 10)\n\n\n# ggplot2\nggplot(mtcars, aes(x=mpg)) + \n  geom_histogram(binwidth = 4, colour = \"black\")\n\n\n\n# Box Plot ####\n# Base R\nplot(ToothGrowth$supp, ToothGrowth$len)\n\nboxplot(len ~ supp, data = ToothGrowth)\n\n# interaction of two variables on x-axis\nboxplot(len ~ supp + dose, data = ToothGrowth)\n\n# ggplot2\nggplot(ToothGrowth, aes(x=supp, y=len)) + geom_boxplot()\n\n# interaction of two variables \nggplot(ToothGrowth, aes(x=interaction(supp, dose), y=len)) + geom_boxplot()\n\n\n\n# Function Curve ####\n# Base R\ncurve(x^3 - 5*x, from = -4, to = 4)\n\nmyfun <- function(xvar) {\n  1/(1 + exp(-xvar + 10))\n}\ncurve(myfun(x), from = 0, to = 20, col =\"green\")\n\n# Add a line\ncurve(1 - myfun(x), add = TRUE, col = \"red\")\n\n# ggplot2\nggplot(data.frame(x=c(0, 20)), aes(x=x)) + \n  stat_function(fun=myfun, geom=\"line\")\n\n\n\n# Chapter 3: Bar Graphs ####\nlibrary(gcookbook)\nggplot(pg_mean, aes(x=group, y=weight)) + geom_col()\n\n# adding colours\nggplot(pg_mean, aes(x=group, y=weight)) + \n  geom_bar(stat = \"identity\", fill=\"lightblue\", colour=\"black\") \n\n# grouping bars together\nggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +\n  geom_col(position= \"dodge\", colour = \"grey\")\n\n# set colours\nggplot(cabbage_exp, aes(x=Date, y=Weight, fill= Cultivar)) +\n  geom_col(position = \"dodge\", colour =\"grey\") +\n  scale_fill_brewer(palette=\"Pastel1\")\n\n# Making Bar Graphs of Counts\nggplot(diamonds, aes(x=cut)) + geom_bar()\n\n# Using Colours in Bar Graphs\nlibrary(gcookbook)\nupc <- subset(uspopchange, rank(Change)>40)\nupc\nggplot(upc, aes(x=Abb, y=Change, fill=Region)) + \n  geom_bar(stat = \"identity\")\n\n# reorder bars\nggplot(upc, aes(x=reorder(Abb, Change), y=Change, fill=Region)) +\n  geom_bar(stat = \"identity\", colour =\"black\") +\n  scale_fill_manual(values=c(\"#669933\", \"#FFCC66\")) +\n  xlab(\"State\")\n\n# positive and negative values\nlibrary(gcookbook)\ncsub <- subset(climate, Source == \"Berkeley\" & Year >= 1900)\ncsub$pos <- csub$Anomaly10y >= 0\n\nggplot(csub, aes(x=Year, y=Anomaly10y, fill=pos))+\n  geom_bar(stat = \"identity\", position = \"identity\")\n\n# improve graph\nggplot(csub, aes(x=Year, y=Anomaly10y, fill=pos))+\n  geom_bar(stat = \"identity\", position = \"identity\", colour=\"black\", size=0.25) +\n  scale_fill_manual(values=c(\"#CCEEFF\", \"#FFDDDD\"), guide=FALSE)\n\n# spacing\nggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +\n  geom_bar(stat = \"identity\", width=0.5, position = \"dodge\")\n\nggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +\n  geom_bar(stat = \"identity\", width=0.5, position = position_dodge(0.7))\n\n# stacked bar graph\nlibrary(gcookbook)\nggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +\n  geom_bar(stat = \"identity\")\n\n# reverse the order of the legends\nlibrary(dplyr)\nggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar, order=desc(Cultivar))) +\n  geom_bar(stat = \"identity\") +\n  guides(fill= guide_legend(reverse = TRUE))\n",
    "created" : 1502809253997.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1908506194",
    "id" : "B5970E0",
    "lastKnownWriteTime" : 1492100935,
    "last_content_update" : 1492100935,
    "path" : "~/Documents/self_study/practice/visualisation/ggplot2.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}